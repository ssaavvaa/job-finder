{"version":3,"sources":["webpack:///./src/pages/auth/sign-up.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/@babel/runtime/regenerator/index.js"],"names":["initialState","username","email","password","passwordConfirm","SignUpBody","withAuth","useState","state","setState","setStateValue","e","target","name","languages","includes","value","filter","x","useMutation","SIGN_UP_USER","variables","lang","onError","error","ErrorAlert","onCompleted","signUpUser","AlertSuccess","message","attrs","handleSubmit","a","preventDefault","className","stl","background","onSubmit","form","autoComplete","onChange","type","placeholder","loading","disabled","to","SignUp","title","runtime","exports","undefined","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","GenStateSuspendedStart","method","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","done","GenStateSuspendedYield","makeInvokeMethod","fn","obj","call","err","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","result","__await","then","unwrapped","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","key","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function"],"mappings":"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","file":"component---src-pages-auth-sign-up-js-2fc929f292b9522f8dd5.js","sourcesContent":["import React , { useState }  from \"react\"\r\nimport Layout from \"../../components/layout\"\r\nimport SEO from '../../components/seo'\r\nimport stl from '../../STYLES/AUTH/sign-in-up.module.scss'\r\nimport { Link } from 'gatsby'\r\nimport { ErrorAlert , AlertSuccess } from '../../helpers/index'\r\nimport { SIGN_UP_USER } from '../../queries/index'\r\nimport { useMutation} from '@apollo/react-hooks';\r\nimport { withAuth } from '../../components/ifAuth'\r\n\r\nconst initialState = {\r\n    username:\"\",\r\n    email:\"\",\r\n    password:\"\",\r\n    passwordConfirm:\"\",\r\n}\r\n\r\nconst SignUpBody = withAuth(() => {\r\n\r\n    const [state , setState ] = useState(initialState)\r\n\r\n    const setStateValue = e => {\r\n        if(e.target.name === 'languages'){\r\n            if(state.languages.includes(e.target.value)){\r\n                const languages = state.languages.filter(x => x !== e.target.value)\r\n                setState({...state , languages})\r\n            }else{\r\n                setState({...state , languages:[...state.languages , e.target.value]})\r\n            }\r\n        }else{\r\n            setState({...state , [e.target.name]:e.target.value})\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const [signUpUser , attrs] = useMutation(SIGN_UP_USER , {\r\n          variables:{username:state.username ,\r\n                     email:state.email ,\r\n                     lang:'en',\r\n                     passwordConfirm:state.passwordConfirm,\r\n                     password:state.password},\r\n          onError:(error) => ErrorAlert(error),\r\n          onCompleted:({signUpUser}) => {\r\n            setState(initialState)\r\n            AlertSuccess(signUpUser.message)\r\n          }\r\n    });\r\n\r\n    const disabled = () => {\r\n        return !state.password || !state.username || !state.email || !state.passwordConfirm  \r\n    }\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault()\r\n        await signUpUser()\r\n    }\r\n\r\nreturn (\r\n    <div className = {stl.background}>\r\n           <form onSubmit = {(e) => handleSubmit(e)} className = {stl.form}>\r\n               <h1>SIGN UP</h1>\r\n               <input autoComplete=\"on\"  value = {state.username} name = 'username' onChange = {e => setStateValue(e)} type = 'text' placeholder = 'username' />\r\n               <input autoComplete=\"on\" value = {state.email} name = 'email' onChange = {e => setStateValue(e)} type = 'email' placeholder = 'email' />\r\n               <input autoComplete=\"on\" value = {state.password} name = 'password' onChange = {e => setStateValue(e)} type = 'password' placeholder = \"password\" />\r\n               <input autoComplete=\"on\" value = {state.passwordConfirm} name = 'passwordConfirm' onChange = {e => setStateValue(e)} type = 'password' placeholder = 'confirm password' />\r\n               {attrs.loading ? <p>Signing up ... </p> : false}\r\n               <button disabled = {disabled()} type = 'submit'>Submit</button>\r\n           </form>\r\n           <p>already have an account? <Link to = '/auth/sign-in'> sign-in </Link> </p>\r\n    </div>\r\n )\r\n})\r\n\r\n\r\nconst SignUp = () => (\r\n        <Layout>\r\n           <SEO title = 'sign-up' />\r\n           <SignUpBody />\r\n      </Layout>\r\n    )\r\n\r\n\r\nexport default SignUp","require(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.promise\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.object.create\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar runtime = function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n\n\n  var IteratorPrototype = {};\n\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\"; // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      prototype[method] = function (arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n\n  exports.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function (value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function (err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n\n  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  exports.async = function (innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));\n    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  Gp[toStringTagSymbol] = \"Generator\"; // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  Gp[iteratorSymbol] = function () {\n    return this;\n  };\n\n  Gp.toString = function () {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  exports.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = \"next\";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function stop() {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  }; // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n\n  return exports;\n}( // If this script is executing as a CommonJS module, use module.exports\n// as the regeneratorRuntime namespace. Otherwise create a new empty\n// object. Either way, the resulting object will be used to initialize\n// the regeneratorRuntime variable at the top of this file.\ntypeof module === \"object\" ? module.exports : {});\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}","module.exports = require(\"regenerator-runtime\");\n"],"sourceRoot":""}